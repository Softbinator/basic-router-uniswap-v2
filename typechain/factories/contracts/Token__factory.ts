/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../common";
import type { Token, TokenInterface } from "../../contracts/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019c2380380620019c28339818101604052810190620000379190620002f9565b8181816003908051906020019062000051929190620000ac565b5080600490805190602001906200006a929190620000ac565b505050620000a17ff11caa7a671880da346fdd69d380e83e9ffd90ac838977786994b215b665638d60001b620000a960201b60201c565b5050620003e2565b50565b828054620000ba90620003ad565b90600052602060002090601f016020900481019282620000de57600085556200012a565b82601f10620000f957805160ff19168380011785556200012a565b828001600101855582156200012a579182015b82811115620001295782518255916020019190600101906200010c565b5b5090506200013991906200013d565b5090565b5b80821115620001585760008160009055506001016200013e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001c5826200017a565b810181811067ffffffffffffffff82111715620001e757620001e66200018b565b5b80604052505050565b6000620001fc6200015c565b90506200020a8282620001ba565b919050565b600067ffffffffffffffff8211156200022d576200022c6200018b565b5b62000238826200017a565b9050602081019050919050565b60005b838110156200026557808201518184015260208101905062000248565b8381111562000275576000848401525b50505050565b6000620002926200028c846200020f565b620001f0565b905082815260208101848484011115620002b157620002b062000175565b5b620002be84828562000245565b509392505050565b600082601f830112620002de57620002dd62000170565b5b8151620002f08482602086016200027b565b91505092915050565b6000806040838503121562000313576200031262000166565b5b600083015167ffffffffffffffff8111156200033457620003336200016b565b5b6200034285828601620002c6565b925050602083015167ffffffffffffffff8111156200036657620003656200016b565b5b6200037485828601620002c6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003c657607f821691505b602082108103620003dc57620003db6200037e565b5b50919050565b6115d080620003f26000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610e1f565b60405180910390f35b6100f160048036038101906100ec9190610eda565b61032f565b6040516100fe9190610f35565b60405180910390f35b61010f610352565b60405161011c9190610f5f565b60405180910390f35b61013f600480360381019061013a9190610f7a565b61035c565b60405161014c9190610f35565b60405180910390f35b61015d61038b565b60405161016a9190610fe9565b60405180910390f35b61018d60048036038101906101889190610eda565b610394565b60405161019a9190610f35565b60405180910390f35b6101bd60048036038101906101b89190610eda565b61043e565b005b6101d960048036038101906101d49190611004565b6104d0565b6040516101e69190610f5f565b60405180910390f35b6101f7610518565b6040516102049190610e1f565b60405180910390f35b61022760048036038101906102229190610eda565b6105aa565b6040516102349190610f35565b60405180910390f35b61025760048036038101906102529190610eda565b610694565b6040516102649190610f35565b60405180910390f35b61028760048036038101906102829190611031565b6106b7565b6040516102949190610f5f565b60405180910390f35b6060600380546102ac906110a0565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906110a0565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a61073e565b9050610347818585610746565b600191505092915050565b6000600254905090565b60008061036761073e565b905061037485828561090f565b61037f85858561099b565b60019150509392505050565b60006012905090565b60008061039f61073e565b9050610433818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461042e9190611100565b610746565b600191505092915050565b61046a7f267014a4abbc0229956d43cd2ea2cabb2e356835189e5d539f0508680ee2634f60001b610c1a565b6104967f74ab520dfb31a671f4671052aca31c9245f9859c5ed0eb8e8c0cc1964e7ca21d60001b610c1a565b6104c27fd1a79fa9b48d45c95adb6a236d6d0e7c2e58bcdc97e26fa087f8ebcf5049030a60001b610c1a565b6104cc8282610c1d565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610527906110a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610553906110a0565b80156105a05780601f10610575576101008083540402835291602001916105a0565b820191906000526020600020905b81548152906001019060200180831161058357829003601f168201915b5050505050905090565b6000806105b561073e565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561067b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610672906111c8565b60405180910390fd5b6106888286868403610746565b60019250505092915050565b60008061069f61073e565b90506106ac81858561099b565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac9061125a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b906112ec565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109029190610f5f565b60405180910390a3505050565b600061091b84846106b7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109955781811015610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90611358565b60405180910390fd5b6109948484848403610746565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906113ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a709061147c565b60405180910390fd5b610a84838383610d7c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b019061150e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9d9190611100565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c019190610f5f565b60405180910390a3610c14848484610d81565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c839061157a565b60405180910390fd5b610c9860008383610d7c565b8060026000828254610caa9190611100565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cff9190611100565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d649190610f5f565b60405180910390a3610d7860008383610d81565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dc0578082015181840152602081019050610da5565b83811115610dcf576000848401525b50505050565b6000601f19601f8301169050919050565b6000610df182610d86565b610dfb8185610d91565b9350610e0b818560208601610da2565b610e1481610dd5565b840191505092915050565b60006020820190508181036000830152610e398184610de6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e7182610e46565b9050919050565b610e8181610e66565b8114610e8c57600080fd5b50565b600081359050610e9e81610e78565b92915050565b6000819050919050565b610eb781610ea4565b8114610ec257600080fd5b50565b600081359050610ed481610eae565b92915050565b60008060408385031215610ef157610ef0610e41565b5b6000610eff85828601610e8f565b9250506020610f1085828601610ec5565b9150509250929050565b60008115159050919050565b610f2f81610f1a565b82525050565b6000602082019050610f4a6000830184610f26565b92915050565b610f5981610ea4565b82525050565b6000602082019050610f746000830184610f50565b92915050565b600080600060608486031215610f9357610f92610e41565b5b6000610fa186828701610e8f565b9350506020610fb286828701610e8f565b9250506040610fc386828701610ec5565b9150509250925092565b600060ff82169050919050565b610fe381610fcd565b82525050565b6000602082019050610ffe6000830184610fda565b92915050565b60006020828403121561101a57611019610e41565b5b600061102884828501610e8f565b91505092915050565b6000806040838503121561104857611047610e41565b5b600061105685828601610e8f565b925050602061106785828601610e8f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b857607f821691505b6020821081036110cb576110ca611071565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110b82610ea4565b915061111683610ea4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561114b5761114a6110d1565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006111b2602583610d91565b91506111bd82611156565b604082019050919050565b600060208201905081810360008301526111e1816111a5565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611244602483610d91565b915061124f826111e8565b604082019050919050565b6000602082019050818103600083015261127381611237565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602283610d91565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611342601d83610d91565b915061134d8261130c565b602082019050919050565b6000602082019050818103600083015261137181611335565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006113d4602583610d91565b91506113df82611378565b604082019050919050565b60006020820190508181036000830152611403816113c7565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611466602383610d91565b91506114718261140a565b604082019050919050565b6000602082019050818103600083015261149581611459565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006114f8602683610d91565b91506115038261149c565b604082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611564601f83610d91565b915061156f8261152e565b602082019050919050565b6000602082019050818103600083015261159381611557565b905091905056fea26469706673582212208237a7854c660b3399357b43e954f659d2f4a81f4a15fe027d501de4a9a9910b64736f6c634300080d0033";

type TokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Token> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
