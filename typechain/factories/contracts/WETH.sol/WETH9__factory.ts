/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../../common";
import type { WETH9, WETH9Interface } from "../../../contracts/WETH.sol/WETH9";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019062000051929190620000d0565b506040518060400160405280600481526020017f5745544800000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f929190620000d0565b506012600260006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b506200017f565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200011357805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014357825182559160200191906001019062000126565b5b50905062000153919062000157565b5090565b6200017c91905b80821115620001785760008160009055506001016200015e565b5090565b90565b611671806200018f6000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461029d57806370a08231146102ce57806395d89b4114610333578063a9059cbb146103c3578063d0e30db014610436578063dd62ed3e146104405761009c565b806306fdde03146100a1578063095ea7b31461013157806318160ddd146101a457806323b872dd146101cf5780632e1a7d4d14610262575b600080fd5b3480156100ad57600080fd5b506100b66104c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013d57600080fd5b5061018a6004803603604081101561015457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610563565b604051808215151515815260200191505060405180910390f35b3480156101b057600080fd5b506101b9610789565b6040518082815260200191505060405180910390f35b3480156101db57600080fd5b50610248600480360360608110156101f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610815565b604051808215151515815260200191505060405180910390f35b34801561026e57600080fd5b5061029b6004803603602081101561028557600080fd5b8101908080359060200190929190505050610fdf565b005b3480156102a957600080fd5b506102b2611338565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102da57600080fd5b5061031d600480360360208110156102f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061134b565b6040518082815260200191505060405180910390f35b34801561033f57600080fd5b50610348611363565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561038857808201518184015260208101905061036d565b50505050905090810190601f1680156103b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cf57600080fd5b5061041c600480360360408110156103e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611401565b604051808215151515815260200191505060405180910390f35b61043e61149a565b005b34801561044c57600080fd5b506104af6004803603604081101561046357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611613565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b505050505081565b60006105917faf985d35f1c28523a135f6a76ce76fd03045ff61576b0315d99a980f6f781f4860001b611638565b6105bd7fdf630c17bb47543b7f0d080bd7617c7abc5a182ed6edec6b48e5d0b8426307e360001b611638565b6105e97fb92ba7088ed81e114f699d49f8208852379429d1f61c3fdafc413dcedf6ea7e560001b611638565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106967f1a26378f9b9e5dd22806fa2397a286353ecc07272a7df4923034bc844deb062560001b611638565b6106c27f86d7a21811187187bcd946df8bd3ed2bbf50ac2d93f5e456feac920c7655249f60001b611638565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36107537fd2ead8aaf81f09839c743d1f961caa2cfd91e1c1f66469fa1ab960b70ddba85a60001b611638565b61077f7fd32a620a178269284c10dcca99928f09a2fda2016986a808f9f05a1478f7663d60001b611638565b6001905092915050565b60006107b77f72c51b04b8a90858b05eac000fe040d1f07fac7e6bbf1714ac45021cffc5544060001b611638565b6107e37f2b5240cb9276ddfa387785abc4001a1ca89a5170f220647102dfbfeaa956f4ef60001b611638565b61080f7f8100ac5ab8aa611112d855e4e31071fc4731d7fc13a1b39b3191537075d685d760001b611638565b47905090565b60006108437fd225f3ee5c06b591280c75e1e250788b5c10e7b317ed356b1d5869397a2b47c960001b611638565b61086f7ff5d98fcc761db8ef0ade5b98df14326355e5de212bdceaaac21749702d355b2260001b611638565b61089b7fef5743e1062965f00bbaed640e5187fce11b3f8fceb34206dfc5ddb6f5125f0760001b611638565b6108c77f91162a9c9bf90b2680abb8aed70f43fecd3cdd89a41decf57b975b0eaeee61ac60001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610957576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b6109837f22cb1dff07cdec1d33eeeb0cb01a93bad244cbd9ed7cd7a2b90835ea45c8c9ec60001b611638565b6109af7f129cb2f0465a389ed03fb8a562c240c789e78f38f4df2575d9eef4dba9ac93a960001b611638565b6109db7f7ae5a08d5029cd33b79bd782a1c5bce4d9bed89f9e43809338b4377c457ad5cb60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610ab357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610d4857610ae47f35d8c974091698a1776080bc77dc8b75ad0192f7d83306b80c255bf05fe83fc560001b611638565b610b107f650a05e52501d49e9db3cb0771d80a1654f9a5346de22c6e98e4f3b8b6a75ab460001b611638565b610b3c7f3c4938071113475405b4ca1836204540854d79478ddb81dfe2091f93ea54956260001b611638565b610b687f9f75ee921c5d4064fac76eec433415c9e5b4da5421af817080c54753f3f954ee60001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b610c617f9f4df0694908c84a6d97a4c55fc011792dec1ace2c2324a9081e0a5c4c61ed9460001b611638565b610c8d7fbc83e60b65289c6244c81853af81953bfe58029da4767680c2943d88e909c29360001b611638565b610cb97fe797dadb4cce7c10d20a4508db6cc8cd4e84eb25b30f0a0ee3aac28a860aded160001b611638565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610d75565b610d747fab7995c34e7c0d9860e40278f5bc7fd60d9be0cade7e187792bd7fafb81aefc360001b611638565b5b610da17ff26361e719538dce233d902d507e5dac7bb10a20657ecedbc90a2d33b5d87efd60001b611638565b610dcd7f5420bb63d5c6b1d9124a43f7708182f7053268812c59ddbdc49fd70826ba46b360001b611638565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550610e467fdde3dc4387116e046dc0c5251a6fc66905b655cbe025b0baab102ccec044f5e760001b611638565b610e727fa77172ab344570abdb5d03948e477c8ee5f73034bfc5cc6224b968cbaf564feb60001b611638565b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550610eeb7f4dd16b1ff8ac93a2b7cffc33b252e6857ddc2f36714bc4c3bba1d13065ff3fb060001b611638565b610f177fddfa8faaa7445821258393b1e20894c83bb83b8cef3e05b2502571bfefdb150e60001b611638565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3610fa87f68b299964d13f860488a47d82b9afe25302ddb82559a8cfb685b66a42375b09860001b611638565b610fd47fad53cf7a8ab305d5e89f568818597d19bfbd3ac332becfc80ab410c2de9d3fde60001b611638565b600190509392505050565b61100b7ffecd53806f80cecc672ad2625aa53912e15f0abd0fac4c88fbac6a6e3656902e60001b611638565b6110377f4d165c1130ac51ce26fc5fc75a331e5a29cd25872f0419ce7cf35f0c3ba7679b60001b611638565b6110637fe62e43731dc242132ee932edc8b3d0167715b3d75edda52921c4699b1f8c296d60001b611638565b61108f7fafdd7d276f8368911c492f60b6a4d8e3513850f0ea8d4d553df7ad7f9a3a644a60001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561111f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b61114b7fa22dcf460e2c34b4d1d29c314c9424b3bd9ee97a75e7afef67145c27d536361860001b611638565b6111777f5780c3cb6f6404608db3b8be7c40d5b1ae07f31b2d815377755bde8a0ab1044b60001b611638565b6111a37f296443ef9d302ba546f92322e624ccf9d7ab5a9cbe4ee277884a92151b03728860001b611638565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061121c7f5c43e143ade748c02141f9d300ab095fa44d3387fb57cfde6a5e47292d3dd9ad60001b611638565b6112487fffebb84eb6e3b5d6d6075075bc6ac28a93dda2a6de1efa3d218c55de9f7dbbfd60001b611638565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561128e573d6000803e3d6000fd5b506112bb7f9f66ac5816c8b1b7b171d2205051c29d136f314f977b748a079b0314dfc8f38260001b611638565b6112e77f38c25cc2a8ee4c1cddde4f2879bfc3a0f658563cf980e8620488818b01534f0460001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113f95780601f106113ce576101008083540402835291602001916113f9565b820191906000526020600020905b8154815290600101906020018083116113dc57829003601f168201915b505050505081565b600061142f7f57a33de36e6741197ba515a0ffa447452c283cf5108c1be38b72378edf5ce92860001b611638565b61145b7fa50fc96ce896afafe744befa7c7305d2d93f643e8755ccca0429d0425e7dee4260001b611638565b6114877ff327e94d80ea6740502d0bf8ac587ea964ea356b1c1d17027e57bc05ffe474e160001b611638565b611492338484610815565b905092915050565b6114c67f707971c6dcd58580c298cddbc129f5bababab5dd236a2a3a0fc12141affd6d3360001b611638565b6114f27f80b36d3b47757097b64150efba7a649e8bd7739d408929752db2fdce8b53cfbb60001b611638565b61151e7fdc3b0dae14ef8ec28340b8e250417f1bb2681c9b3ac5fd826beed084866a529a60001b611638565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506115977f22449c4439a3c1d2d97d0e77277237e999c07d7f2990b02dd869f6716c9e088260001b611638565b6115c37f7c50ee33cfee242a1695f382741c2e60f5d6b3ddf70428415b1ddf50d091191160001b611638565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b6004602052816000526040600020602052806000526040600020600091509150505481565b5056fea2646970667358221220ec829c46392b6f9801d113bb8e721ab69ccb140821822a431979cb7f4cb0204164736f6c63430006060033";

type WETH9ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WETH9ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH9__factory extends ContractFactory {
  constructor(...args: WETH9ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<WETH9> {
    return super.deploy(overrides || {}) as Promise<WETH9>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WETH9 {
    return super.attach(address) as WETH9;
  }
  override connect(signer: Signer): WETH9__factory {
    return super.connect(signer) as WETH9__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETH9Interface {
    return new utils.Interface(_abi) as WETH9Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH9 {
    return new Contract(address, _abi, signerOrProvider) as WETH9;
  }
}
